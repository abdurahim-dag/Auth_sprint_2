version: '3'
services:

  db-movie:
    container_name: db-movie
    build: db
    environment:
      POSTGRES_DB: ${PG_DB_NAME}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}

  app-movie:
    container_name: app-movie
    build:
      context: app
      args:
        appuser: ${APP_USER}
    depends_on:
      - db-movie

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es01
    depends_on:
      - db-movie
    expose:
      - "9200"

  etl:
    container_name: etl-movie
    build:
      context: etl
    depends_on:
      - es01

  fastapi:
    container_name: fastapi
    build:
      context: fastapi-solution
      args:
        appuser: ${APP_IO_USER}
    depends_on:
      - es01

  redis:
    image: redis
    container_name: redis
    hostname: redis
    command: redis-server
    expose:
      - "6379"

  auth:
    container_name: auth
    build:
      context: ./auth
    depends_on:
      auth-db:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    expose:
      - "5000"
    ports:
      - "5000:5000"

  auth-db:
    container_name: auth-db
    build: ./auth-db
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    expose:
      - "5432"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app", "-d", "movies_auth"]
      interval: 5s
      retries: 5
    restart: unless-stopped

  auth-redis:
    image: redis
    container_name: auth-redis
    hostname: auth-redis
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    expose:
      - "6379"
    ports:
      - "6380:6379"
    restart: unless-stopped

  nginx-movie:
    container_name: nginx-movie
    build:
      context: ./nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    restart: always

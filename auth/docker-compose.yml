version: '3'
services:

  auth:
    container_name: auth
    build:
      context: .
    depends_on:
      auth-db:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    env_file: .env
    expose:
      - "5000"
    ports:
      - "5000:5000"
    volumes:
      - dev-secret-auth:/secret
    networks:
      - test-net

  auth-db:
    container_name: auth-db
    build: ../auth-db
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    volumes:
      - dev-pg-db-auth:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "app", "-d", "movies_auth"]
      interval: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - test-net

  auth-redis:
    image: redis
    container_name: auth-redis
    hostname: auth-redis
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    expose:
      - "6379"
    ports:
      - "6380:6379"
    restart: unless-stopped
    networks:
      - test-net

  auth-tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: auth-tests
    env_file: .env
    volumes:
      - ./app:/app
    entrypoint: >
      /bin/bash -c "pytest"    
    networks:
      - test-net

  nginx-movie:
    container_name: nginx-movie
    build:
      context: ./nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    restart: always
    networks:
      - test-net

volumes:
  dev-pg-db-auth:
  dev-secret-auth:

networks:
  test-net: